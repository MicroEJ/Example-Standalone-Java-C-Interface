<?xml version="1.0" encoding="UTF-8"?>
<!--
	ANT
	
	Copyright 2012-2014 IS2T. All rights reserved.
	Modification and distribution is permitted under certain conditions.
	IS2T PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->
<project name="clearKeilUVisionProject">

	<fileset dir="." id="microej.clearKeilUVisionProject.empty.files.id" excludes="**/*"/>
		
	<macrodef name="microej.clearKeilUVisionProject" description="Generate a Keil UVision 4 project by adding new files (*.c,*.s, *.o, *.lib ... files) in a previously defined group">
		<!-- ANT 1.7 compatible -->
		<attribute name="clearKeilUVisionProject.project.file" description="Project file to be modified (.uvproj)"/>
		<attribute name="clearKeilUVisionProject.group.name" description="Group name where to add files" default=""/>
		<sequential>
			<antcall target="microej.clearKeilUVisionProject.intern">
				<param name="clearKeilUVisionProject.project.file" value="@{clearKeilUVisionProject.project.file}"/>
				<param name="clearKeilUVisionProject.group.name" value="@{clearKeilUVisionProject.group.name}"/>
			</antcall>
		</sequential>
	</macrodef>

	<target name="microej.clearKeilUVisionProject.intern">
		<!-- Internal target for local context -->
		
		<!-- 1) Generate XSL for files to be inserted -->
		<tempfile property="clearKeilUVisionProject.tmp.xsl" destdir="${java.io.tmpdir}"/>
		<echo file="${clearKeilUVisionProject.tmp.xsl}"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
			<!--
				Copyright 2012 IS2T. All rights reserved.
				IS2T PROPRIETARY. Use is subject to license terms.
				
				Bibliography:
					[XSLTREC] XSL Transformations (XSLT), Version 1.0, W3C Recommendation 16 November 1999
			-->
			<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
				<!-- This is an XML to XML generator -->
				<xsl:output	method="xml" indent="yes"/>
	
				<!-- Well known identity transformation : see 7.5 in [XSLTREC] -->
				<xsl:template match="node()|@*">
					<xsl:copy>
						<xsl:apply-templates select="node()|@*"/>
					</xsl:copy>
				</xsl:template>
	
				<xsl:template match="Group[child::GroupName='${clearKeilUVisionProject.group.name}']/Files"/>
			
			</xsl:stylesheet>
			]]>
		</echo>
		<!-- 2) Process XSL and generate ouput project  -->
		<tempfile property="clearKeilUVisionProject.tmp.project" destdir="${java.io.tmpdir}"/>
		<copy file="${clearKeilUVisionProject.project.file}" tofile="${clearKeilUVisionProject.tmp.project}"/>
		<xslt 
			style="${clearKeilUVisionProject.tmp.xsl}" 
		    in="${clearKeilUVisionProject.tmp.project}"
			out="${clearKeilUVisionProject.project.file}"
			force="true"
		/>

		<delete file="${clearKeilUVisionProject.tmp.xsl}"/>
		<delete file="${clearKeilUVisionProject.tmp.project}"/>
	</target>
</project>
