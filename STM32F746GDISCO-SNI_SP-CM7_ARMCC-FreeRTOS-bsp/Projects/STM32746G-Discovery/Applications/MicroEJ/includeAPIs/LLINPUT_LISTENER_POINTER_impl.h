/* 
 * Copyright 2012-2013 IS2T. All rights reserved.
 * Modification and distribution is permitted under certain conditions.
 * IS2T PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 */
/* 
 * AUTOGENERATED by COMP-ICETEA-ARMCC-ARM - 1.0.0 - DO NOT EDIT IT
 */
/* 
 * Implementation header file. Shall only be included by client implementation C files.
 */
#include <LLINPUT_LISTENER_POINTER.h>
#include <stdint.h>
#include <intern/LLINPUT_LISTENER_POINTER_impl.h>
#include <LLINPUT_DEVICE.h>
// --------------------------------------------------------------------------------
// -                      Functions that must be implemented                      -
// --------------------------------------------------------------------------------

/**
 * A PRESSED action has occurred on the given button of the given pointer. 
 * @param pointer the pointer device instance
 * @param buttonID the pointer button ID
 * @param x the x-coordinate where the pointer action has occurred
 * @param y the y-coordinate where the pointer action has occurred
 * @return 1 if the pointer action has been managed by the listener
 */
uint8_t LLINPUT_LISTENER_POINTER_IMPL_pointerPressed(LLINPUT_DEVICE* pointer, int32_t buttonID, int32_t x, int32_t y);

/**
 * A RELEASED action has occurred on the given button of the given pointer. 
 * @param pointer the pointer device instance
 * @param buttonID the pointer button ID
 * @param x the x-coordinate where the pointer action has occurred
 * @param y the y-coordinate where the pointer action has occurred
 * @return 1 if the pointer action has been managed by the listener
 */
uint8_t LLINPUT_LISTENER_POINTER_IMPL_pointerReleased(LLINPUT_DEVICE* pointer, int32_t buttonID);

/**
 * A MOVE action has occurred on the given pointer. 
 * @param pointer the pointer device instance
 * @param x the new pointer x-coordinate
 * @param y the new pointer y-coordinate 
 * @return 1 if the pointer action has been managed by the listener
 */
uint8_t LLINPUT_LISTENER_POINTER_IMPL_pointerMoved(LLINPUT_DEVICE* pointer, int32_t x, int32_t y);
